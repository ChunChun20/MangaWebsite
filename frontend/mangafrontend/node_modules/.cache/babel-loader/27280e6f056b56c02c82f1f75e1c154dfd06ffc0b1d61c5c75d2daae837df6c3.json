{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactManga\\\\mangafrontend\\\\src\\\\pages\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport MangaList from '../components/MangaList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const searchTerm = searchParams.get('search') || \"\";\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const searchQuery = queryParams.get(\"search\");\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: /*#__PURE__*/_jsxDEV(MangaList, {\n        url: \"http://127.0.0.1:5000/mangas?\",\n        mangasPerPage: 24,\n        sortBy: \"created_at\",\n        order: \"desc\",\n        searchTerm: searchTerm,\n        title: `Search results for \"${searchTerm}\"`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchResults, \"ebGh8CpZotG9/y7wbsh0hI5Y3l4=\", false, function () {\n  return [useSearchParams, useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useSearchParams","useLocation","MangaList","jsxDEV","_jsxDEV","SearchResults","_s","searchParams","searchTerm","get","location","queryParams","URLSearchParams","search","searchQuery","useEffect","style","position","children","className","url","mangasPerPage","sortBy","order","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ReactManga/mangafrontend/src/pages/SearchResults.js"],"sourcesContent":["import React from 'react';\r\nimport { useSearchParams,useLocation} from 'react-router-dom';\r\nimport MangaList from '../components/MangaList';\r\n\r\nconst SearchResults = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const searchTerm = searchParams.get('search') || \"\";\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const searchQuery = queryParams.get(\"search\")\r\n\r\n    useEffect(() => {\r\n        \r\n    })\r\n\r\n\r\n    return (\r\n        <div style={{ position: 'relative'}}> \r\n            <div className=\"container mt-4\">\r\n            <MangaList url=\"http://127.0.0.1:5000/mangas?\" mangasPerPage={24} sortBy=\"created_at\" order=\"desc\" searchTerm={searchTerm} title={`Search results for \"${searchTerm}\"`} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAACC,WAAW,QAAO,kBAAkB;AAC7D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,CAAC,GAAGP,eAAe,CAAC,CAAC;EACxC,MAAMQ,UAAU,GAAGD,YAAY,CAACE,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;EACnD,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACxD,MAAMC,WAAW,GAAGH,WAAW,CAACF,GAAG,CAAC,QAAQ,CAAC;EAE7CM,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;EAGF,oBACIX,OAAA;IAAKY,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAU,CAAE;IAAAC,QAAA,eAChCd,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC/Bd,OAAA,CAACF,SAAS;QAACkB,GAAG,EAAC,+BAA+B;QAACC,aAAa,EAAE,EAAG;QAACC,MAAM,EAAC,YAAY;QAACC,KAAK,EAAC,MAAM;QAACf,UAAU,EAAEA,UAAW;QAACgB,KAAK,EAAE,uBAAuBhB,UAAU;MAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAnBKD,aAAa;EAAA,QACQL,eAAe,EAErBC,WAAW;AAAA;AAAA4B,EAAA,GAH1BxB,aAAa;AAqBnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}