{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactManga\\\\mangafrontend\\\\src\\\\pages\\\\LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LandingPage() {\n  _s();\n  const [mangas, setMangas] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const mangasPerPage = 25;\n  useEffect(() => {\n    fetchMangas();\n  }, [currentPage]);\n  const fetchMangas = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/mangas?page=${currentPage}&per_page=${mangasPerPage}`);\n      setMangas(response.data.mangas);\n      setTotalPages(response.data.total_pages);\n    } catch (error) {\n      console.error(\"Error fetching mangas\", error);\n    } finally {\n      setLoading;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"navbar-brand\",\n          children: \"Manga App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navbar-nav me-auto mb-2 mb-lg-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                className: \"nav-link\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/register\",\n                className: \"nav-link\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(LandingPage, \"+5f3YVnus2j+eFabF9suGBqFeWY=\");\n_c = LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","LandingPage","_s","mangas","setMangas","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","mangasPerPage","useEffect","fetchMangas","response","get","data","total_pages","error","console","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ReactManga/mangafrontend/src/pages/LandingPage.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function LandingPage(){\r\n    const [mangas,setMangas] = useState([]);\r\n    const [currentPage,setCurrentPage] = useState(1);\r\n    const [totalPages,setTotalPages] = useState(1);\r\n    const [loading,setLoading] = useState(true);\r\n    const mangasPerPage = 25;\r\n\r\n    useEffect(() => {\r\n        fetchMangas();\r\n    }, [currentPage]);\r\n\r\n\r\n    const fetchMangas = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(`http://127.0.0.1:5000/mangas?page=${currentPage}&per_page=${mangasPerPage}`);\r\n            setMangas(response.data.mangas);\r\n            setTotalPages(response.data.total_pages);\r\n        } catch (error) {\r\n            console.error(\"Error fetching mangas\",error);\r\n        } finally {\r\n            setLoading\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">Manga App</Link>\r\n                <div>\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/register\" className=\"nav-link\">Register</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}