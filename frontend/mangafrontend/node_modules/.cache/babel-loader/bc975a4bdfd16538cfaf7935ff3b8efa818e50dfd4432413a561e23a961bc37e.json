{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactManga\\\\mangafrontend\\\\src\\\\pages\\\\RandomMangaDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../MangaDetailsPage.css';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomMangaDetailsPage = () => {\n  _s();\n  const {\n    mangaId\n  } = useParams();\n  const [manga, setManga] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [rating, setRating] = useState(0);\n  const [isFavourite, setIsFavourite] = useState(false);\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUser(decodedToken);\n      } catch (e) {\n        console.error(\"Invalid Token\");\n      }\n    }\n    fetchMangaDetails();\n  }, [mangaId]); // Only fetch manga on mount or when mangaId changes\n\n  const fetchMangaDetails = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`http://127.0.0.1:5000/mangas/${mangaId ? mangaId : 'random'}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setManga(response.data.manga);\n      if (response.data.manga.userRating) {\n        setRating(response.data.manga.userRating);\n      }\n      if (response.data.manga.isFavorite != null) {\n        setIsFavourite(response.data.manga.isFavorite);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching manga details: \", error);\n      navigate(\"/\");\n      setLoading(false);\n    }\n  };\n  const handleRatingChange = async newRating => {\n    if (!user) {\n      alert(\"You must log in to rate a manga\");\n      navigate(\"/login\");\n    }\n    try {\n      await axios.post(`http://127.0.0.1:5000/mangas/${manga.id}/rate`, {\n        rating: newRating\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setRating(newRating);\n    } catch (e) {\n      console.error(\"Error sending rating\", e);\n    }\n  };\n  const handleAddToFavourites = async () => {\n    if (!user) {\n      alert(\"You must be logged in to add mangas to your favourites\");\n      navigate(\"/login\");\n    }\n    try {\n      await axios.post(`http://127.0.0.1:5000/mangas/${manga.id}/favorite`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setIsFavourite(!isFavourite);\n    } catch (e) {\n      console.error(\"Could not add to favourites\", e);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading manga details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  if (!manga) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Manga not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manga-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manga-detail-header\",\n      style: {\n        backgroundImage: `url(${manga.imageUrl})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manga-detail-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"manga-details-title\",\n        children: manga.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: manga.imageUrl,\n        alt: manga.title,\n        className: \"manga-detail-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manga-detail-tags\",\n        children: manga.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"manga-detail-tag\",\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 54\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"manga-details-rating\",\n        children: [\"Rating: \", manga.averageRating, \"\\u2605\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"manga-detail-description\",\n        children: manga.description ? manga.description : \"No Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manga-detail-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-container\",\n          children: [1, 2, 3, 4, 5].map((star, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `details-star ${index < rating ? \"filled\" : \"\"}`,\n            onClick: () => handleRatingChange(index + 1),\n            children: \"\\u2605\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-favourites-button\",\n          onClick: handleAddToFavourites,\n          children: isFavourite ? \"Remove from favourites\" : \"Add to favourites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(RandomMangaDetailsPage, \"RE+0cn0ygJW8w4sc16ksvHiTTdo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RandomMangaDetailsPage;\nexport default RandomMangaDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"RandomMangaDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jwtDecode","jsxDEV","_jsxDEV","RandomMangaDetailsPage","_s","mangaId","manga","setManga","loading","setLoading","rating","setRating","isFavourite","setIsFavourite","navigate","user","setUser","token","localStorage","getItem","decodedToken","e","console","error","fetchMangaDetails","response","get","headers","data","userRating","isFavorite","handleRatingChange","newRating","alert","post","id","handleAddToFavourites","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundImage","imageUrl","title","src","alt","tags","map","tag","index","averageRating","description","star","onClick","_c","$RefreshReg$"],"sources":["C:/ReactManga/mangafrontend/src/pages/RandomMangaDetailsPage.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../MangaDetailsPage.css';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst RandomMangaDetailsPage = () => {\r\n    const { mangaId } = useParams();\r\n    const [manga, setManga] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [rating, setRating] = useState(0);\r\n    const [isFavourite, setIsFavourite] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState(null);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            try {\r\n                const decodedToken = jwtDecode(token);\r\n                setUser(decodedToken);\r\n            } catch (e) {\r\n                console.error(\"Invalid Token\");\r\n            }\r\n        }\r\n        fetchMangaDetails();\r\n    }, [mangaId]); // Only fetch manga on mount or when mangaId changes\r\n\r\n    const fetchMangaDetails = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get(`http://127.0.0.1:5000/mangas/${mangaId ? mangaId : 'random'}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            setManga(response.data.manga);\r\n            if (response.data.manga.userRating) {\r\n                setRating(response.data.manga.userRating);\r\n            }\r\n             if(response.data.manga.isFavorite != null){\r\n                 setIsFavourite(response.data.manga.isFavorite)\r\n             }\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error(\"Error fetching manga details: \", error);\r\n            navigate(\"/\");\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleRatingChange = async (newRating) => {\r\n        if (!user) {\r\n            alert(\"You must log in to rate a manga\");\r\n            navigate(\"/login\");\r\n        }\r\n        try {\r\n            await axios.post(`http://127.0.0.1:5000/mangas/${manga.id}/rate`, {\r\n                rating: newRating\r\n            },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                });\r\n            setRating(newRating);\r\n          \r\n        }\r\n        catch (e) {\r\n            console.error(\"Error sending rating\", e);\r\n        }\r\n    };\r\n\r\n    const handleAddToFavourites = async () => {\r\n        if (!user) {\r\n            alert(\"You must be logged in to add mangas to your favourites\");\r\n             navigate(\"/login\");\r\n        }\r\n        try {\r\n           await axios.post(`http://127.0.0.1:5000/mangas/${manga.id}/favorite`, {}, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            setIsFavourite(!isFavourite);\r\n        }\r\n        catch (e) {\r\n            console.error(\"Could not add to favourites\", e);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Loading manga details...</p>;\r\n    }\r\n\r\n    if (!manga) {\r\n        return <p>Manga not found.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"manga-detail-container\">\r\n            <div className=\"manga-detail-header\" style={{ backgroundImage: `url(${manga.imageUrl})` }}>\r\n            </div>\r\n            <div className=\"manga-detail-content\">\r\n\r\n                <h2 className=\"manga-details-title\">{manga.title}</h2>\r\n                <img src={manga.imageUrl} alt={manga.title} className=\"manga-detail-image\" />\r\n                <div className=\"manga-detail-tags\">\r\n                    {manga.tags.map((tag, index) => (<span key={index} className=\"manga-detail-tag\">{tag}</span>))}\r\n                </div>\r\n                <p className=\"manga-details-rating\">\r\n                    Rating: {manga.averageRating}★\r\n                </p>\r\n                <p className=\"manga-detail-description\">{manga.description ? manga.description : \"No Description\"}</p>\r\n\r\n                <div className=\"manga-detail-actions\">\r\n                    <div className=\"rating-container\">\r\n                        {[1, 2, 3, 4, 5].map((star, index) => (\r\n                            <span key={index} className={`details-star ${index < rating ? \"filled\" : \"\"}`}\r\n                                onClick={() => handleRatingChange(index + 1)}\r\n                            >★</span>\r\n                        ))}\r\n                    </div>\r\n                    <button className=\"add-favourites-button\" onClick={handleAddToFavourites}>\r\n                        {isFavourite ? \"Remove from favourites\" : \"Add to favourites\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RandomMangaDetailsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}