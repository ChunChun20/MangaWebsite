{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactManga\\\\mangafrontend\\\\src\\\\pages\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MangaList from '../components/MangaList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const searchTerm = searchParams.get('search') || \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"advanced-search-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-4\",\n        children: /*#__PURE__*/_jsxDEV(MangaList, {\n          url: \"http://127.0.0.1:5000/mangas?\",\n          mangasPerPage: 24,\n          sortBy: \"created_at\",\n          order: \"desc\",\n          searchTerm: searchTerm,\n          title: `Search results for \"${searchTerm}\"`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchResults, \"HWxNQEGJGSlsPJ3ubBB3081mtng=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useSearchParams","MangaList","jsxDEV","_jsxDEV","SearchResults","_s","searchParams","searchTerm","get","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","position","url","mangasPerPage","sortBy","order","title","_c","$RefreshReg$"],"sources":["C:/ReactManga/mangafrontend/src/pages/SearchResults.js"],"sourcesContent":["import React from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport MangaList from '../components/MangaList';\r\n\r\nconst SearchResults = () => {\r\n    const [searchParams] = useSearchParams();\r\n    const searchTerm = searchParams.get('search') || \"\";\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"advanced-search-container\"></div>\r\n        <div style={{ position: 'relative'}}> \r\n            <div className=\"container mt-4\">\r\n            <MangaList url=\"http://127.0.0.1:5000/mangas?\" mangasPerPage={24} sortBy=\"created_at\" order=\"desc\" searchTerm={searchTerm} title={`Search results for \"${searchTerm}\"`} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,CAAC,GAAGN,eAAe,CAAC,CAAC;EACxC,MAAMO,UAAU,GAAGD,YAAY,CAACE,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;EAInD,oBACIL,OAAA;IAAAM,QAAA,gBACIN,OAAA;MAAKO,SAAS,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrDX,OAAA;MAAKY,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAU,CAAE;MAAAP,QAAA,eAChCN,OAAA;QAAKO,SAAS,EAAC,gBAAgB;QAAAD,QAAA,eAC/BN,OAAA,CAACF,SAAS;UAACgB,GAAG,EAAC,+BAA+B;UAACC,aAAa,EAAE,EAAG;UAACC,MAAM,EAAC,YAAY;UAACC,KAAK,EAAC,MAAM;UAACb,UAAU,EAAEA,UAAW;UAACc,KAAK,EAAE,uBAAuBd,UAAU;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAT,EAAA,CAhBKD,aAAa;EAAA,QACQJ,eAAe;AAAA;AAAAsB,EAAA,GADpClB,aAAa;AAkBnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}